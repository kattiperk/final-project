{"version":3,"sources":["firebase.js","components/Login.js","contexts/AuthContext.js","components/Chats.js","App.js","reportWebVitals.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Login","className","onClick","signInWithPopup","GoogleAuthProvider","GoogleOutlined","AuthContext","React","createContext","AuthProvider","children","useState","loading","setLoading","user","setUser","history","useHistory","useEffect","onAuthStateChanged","push","value","Provider","Chats","didMountRef","useRef","useContext","handleLogout","a","signOut","getFile","url","fetch","response","blob","data","File","type","current","axios","get","headers","process","email","uid","then","catch","formdata","FormData","append","photoURL","avatar","name","post","error","console","log","height","projectID","userName","userSecret","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed8ed04f.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nexport const auth = firebase.initializeApp({\n  apiKey: \"AIzaSyDLPTDnPCnD4iEty4SdULz0IRLwr72PNTQ\",\n  authDomain: \"messaging-app-4c475.firebaseapp.com\",\n  projectId: \"messaging-app-4c475\",\n  storageBucket: \"messaging-app-4c475.appspot.com\",\n  messagingSenderId: \"402861630323\",\n  appId: \"1:402861630323:web:6dc57f7d2d8c14ab0c9b06\"\n}).auth();\n\n// if (firebase.apps.length === 0) {\n//   firebase.initializeApp({});\n// }\n\n// const auth = firebase.auth();\n// const firestore = firebase.firestore();","import React from 'react';\nimport { GoogleOutlined } from '@ant-design/icons';\nimport './css/Login.css';\nimport firebase from 'firebase/app';\n\nimport { auth } from '../firebase'\n\nexport default function Login() {\n    return (\n        <div className=\"login-wrapper bg-dark bg-gradient d-flex align-items-center justify-content-center\">\n            <div className=\"login-card bg-white rounded-circle\">\n                <h1>\n                    Welcome to Chat!\n                </h1>\n                <button\n                    className=\"btn btn-primary google\"\n                    onClick={() => auth.signInWithPopup(new firebase.auth.GoogleAuthProvider())}\n                >\n                    <GoogleOutlined />\n                    <span className=\"ps-2\">Sign in</span>\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { auth } from '../firebase';\n\nconst AuthContext = React.createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n    const [loading, setLoading] = useState(true);\n    const [user, setUser] = useState(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        auth.onAuthStateChanged((user) => {\n            setUser(user);\n            setLoading(false);\n\n            if(user) {\n                history.push('/chats');\n                return;\n            }\n            \n        })\n    }, [user, history]);\n\n    const value = { user };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ChatEngine } from 'react-chat-engine';\nimport { auth } from '../firebase';\nimport './css/Chats.css';\n\nimport { useAuth } from '../contexts/AuthContext';\nimport axios from 'axios';\n\nexport default function Chats() {\n    const didMountRef = useRef(false);\n    const history = useHistory();\n    const { user } = useAuth();\n    const [loading, setLoading] = useState(true);\n\n    const handleLogout = async () => {\n        await auth.signOut();\n        history.push('/');\n    }\n\n    const getFile = async (url) => {\n        const response = await fetch(url);\n        const data = await response.blob();\n\n        return new File([data], 'userPhoto.jpg', { type: 'image/jpeg' })\n    }\n\n    useEffect(() => {\n        if (!didMountRef.current) {\n            didMountRef.current = true\n\n            if(!user || user === null) {\n                history.push('/');\n                return;\n            }\n\n            axios.get(\n                'https://api.chatengine.io/users/me/',\n                { headers: {\n                    \"project-id\": process.env.REACT_APP_MESSENGER_CHAT_ID,\n                    \"user-name\": user.email,\n                    \"user-secret\": user.uid,\n                }\n            })\n\n            .then(() => {\n                setLoading(false);\n            })\n\n            .catch(() => {\n                let formdata = new FormData();\n                formdata.append('email', user.email);\n                formdata.append('username', user.email);\n                formdata.append('secret', user.uid);\n\n                getFile(user.photoURL)\n                    .then((avatar) => {\n                        formdata.append('avatar', avatar, avatar.name)\n\n                        axios.post('https://api.chatengine.io/users/',\n                            formdata,\n                            { headers: {\n                                \"private-key\": process.env.REACT_APP_MESSENGER_CHAT_KEY,\n                            }}\n                        )\n                        .then(() => setLoading(false))\n                        .catch((error) => console.log(error))\n                    })\n            })\n        }\n    }, [user, history]);\n\n    if(!user || loading) return 'Loading...';\n\n    return (\n        <div className=\"chats-page\">\n            <div className=\"nav bg-dark ps-5 pe-5 d-flex justify-content-between align-items-center\">\n                <div className=\"logo\">\n                    Messenger Chat\n                </div>\n                <button type=\"button\" onClick={handleLogout} className=\"btn btn-danger\">Logout</button>\n            </div> \n\n            <ChatEngine\n                height=\"calc(100vh - 66px)\"\n                projectID={process.env.REACT_APP_MESSENGER_CHAT_ID}\n                userName={user.email}\n                userSecret={user.uid}\n            />\n        </div>\n    )\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport './App.css';\nimport Login  from \"./components/Login\";\nimport Chats from \"./components/Chats\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\n\nfunction App() {\n\n  return (\n    <div className=\"bg-dark\">\n      <Router>\n        <AuthProvider>\n          <Switch>\n            <Route path=\"/chats\" component={Chats} />\n            <Route path=\"/\" component={Login} />\n          </Switch>\n        </AuthProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}